[gd_scene load_steps=7 format=2]

[ext_resource path="res://addons/Debug Console/debug_console.gd" type="Script" id=1]

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 0, 0, 0, 0.133333 )

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0.6, 0.6, 0.6, 0 )

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 1, 1, 1, 0 )

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0, 0, 0, 0 )

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0, 0, 0, 0.133333 )

[node name="Debug Layer" type="CanvasLayer"]
pause_mode = 2
layer = 128
__meta__ = {
"_editor_description_": "This is the root canvas layer for all debug controls. It's set to the highest possible value, meaning it will always appear above everything else by default."
}

[node name="DebugFrame" type="Control" parent="."]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 0.499451
margin_bottom = 0.499451
focus_mode = 2
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Parent control for the UI elements within the scene."
}

[node name="Output" type="TextEdit" parent="DebugFrame"]
pause_mode = 2
visible = false
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -190.0
margin_bottom = -35.0
custom_styles/read_only = SubResource( 1 )
custom_styles/focus = SubResource( 2 )
custom_styles/normal = SubResource( 3 )
readonly = true
wrap_enabled = true
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Output for user commands while in-game."
}

[node name="GraphicsAPI" type="Label" parent="DebugFrame/Output"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -40.0
margin_top = -33.0
margin_right = -10.0
grow_horizontal = 0
grow_vertical = 0
custom_colors/font_color = Color( 0.0156863, 0.87451, 0.976471, 0.74902 )
align = 2
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Input" type="LineEdit" parent="DebugFrame"]
visible = false
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -35.0
custom_styles/focus = SubResource( 4 )
custom_styles/normal = SubResource( 5 )
max_length = 255
placeholder_text = "Type \"help\" for a list of commands"
caret_blink = true
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Input for user commands while in-game."
}
user_space = true

[node name="DebugLabelVbox" type="VBoxContainer" parent="DebugFrame"]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -108.471
margin_top = 10.0
margin_right = -9.47083
margin_bottom = -10.0
grow_horizontal = 0
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "Container for the labels that display in-game debug stats/values"
}

[node name="FPSCounter" type="Label" parent="DebugFrame/DebugLabelVbox"]
visible = false
margin_right = 99.0
margin_bottom = 14.0
align = 2
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "A basic frames per second counter"
}

[node name="Stats" type="Label" parent="DebugFrame/DebugLabelVbox"]
visible = false
margin_top = 18.0
margin_right = 99.0
margin_bottom = 32.0
align = 2
__meta__ = {
"_editor_description_": "Various stats are displayed here"
}

[node name="CommandHelp" type="WindowDialog" parent="DebugFrame"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -260.0
margin_top = -233.0
margin_right = 260.0
margin_bottom = 244.0
window_title = "Help"
resizable = true
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": "A popup window that displays the full list of commands and what they do."
}

[node name="TabContainer" type="TabContainer" parent="DebugFrame/CommandHelp"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 0.49939
margin_right = 0.49939
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Commands" type="Tabs" parent="DebugFrame/CommandHelp/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VSplitContainer" type="VSplitContainer" parent="DebugFrame/CommandHelp/TabContainer/Commands"]
anchor_right = 1.0
anchor_bottom = 1.0
split_offset = 400
dragger_visibility = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HSplitContainer" type="HSplitContainer" parent="DebugFrame/CommandHelp/TabContainer/Commands/VSplitContainer"]
margin_right = 512.0
margin_bottom = 400.0
split_offset = -125
dragger_visibility = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Commands" type="RichTextLabel" parent="DebugFrame/CommandHelp/TabContainer/Commands/VSplitContainer/HSplitContainer"]
margin_right = 131.0
margin_bottom = 400.0
grow_horizontal = 0
size_flags_horizontal = 3
custom_constants/line_separation = 10
text = "\"help\"
\"clear\"
\"shoot\"
\"quit\"
\"cr\"
\"fov\"
\"mw\"
\"fxaa\"
\"msaa\"
\"mt\"
\"debug stats\"
\"debug fps\"
\"debug reload\"
\"debug draw\"        
\"debug desc\"       
\"debug name\" "
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": ""
}

[node name="Descriptions" type="RichTextLabel" parent="DebugFrame/CommandHelp/TabContainer/Commands/VSplitContainer/HSplitContainer"]
margin_left = 131.0
margin_right = 512.0
margin_bottom = 400.0
grow_horizontal = 0
size_flags_horizontal = 3
custom_constants/line_separation = 10
text = "- Displays all available commands
- Clears all output and input text
- Takes a screenshot of the in-game viewport
- Causes the program to quit
- Change resolution, changes the window's resolution
- Field of view, changes the camera's fov in a 3D scene
- Modify window, changes the window state
- Toggle FXAA on or off
- Toggle between MSAA settings (off, 2,  4, 8)
- Mod time, changes the in-game time scale
- Displays useful statistics in-game
- Displays the current frames per second in-game
- Reloads the current scene
- Displays 3D objects in a debug-overdraw mode
- Prints the game's description to the output
- Prints the game's name to the output"

[node name="Note" type="RichTextLabel" parent="DebugFrame/CommandHelp/TabContainer/Commands/VSplitContainer"]
margin_top = 400.0
margin_right = 512.0
margin_bottom = 441.0
text = "Note: \"debug draw\" will not work if your project is exported, nor will it work if you're not using GLES3."

[node name="Usage" type="Tabs" parent="DebugFrame/CommandHelp/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="Label" type="Label" parent="DebugFrame/CommandHelp/TabContainer/Usage"]
anchor_right = 1.0
anchor_bottom = 1.0
text = "In order to use a command you simply have to type it's prefix followed by the value. Some commands only have a prefix, like the \"help\" command. Others like the \"cr\" (short for  \"change resolution\")  command require the prefix followed by a space, then the value.

Example: cr 300,400

This exact command will change the window resolution to be 300x400 pixels.


Commands such as \"mw\" (short for \"modify window\") expect a keyword.

Example: mw fullscreen

That will set the window into fullscreen mode."
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Method Calls" type="Tabs" parent="DebugFrame/CommandHelp/TabContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="RichTextLabel" type="RichTextLabel" parent="DebugFrame/CommandHelp/TabContainer/Method Calls"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 1.49829
margin_right = 1.49829
bbcode_enabled = true
text = "You can use the console to manually call methods on any object in your scene, even on singletons. The only two conditions are that the object must exist in your scene somewhere, and it must have the method you've typed. You can call custom methods on nodes with scripts attached to them as well.

It's important to note that this is case-sensitive, so you must type both the object and method names exactly as they appear in your scenes or scripts.

ex: Label.hide

Typing that will call the \"hide\" method on the object \"Label\" within the scene if both exist.

This can also accept up to 3 optional arguments separated by spaces if the method requires them.

ex: Label.set_scale Vector2(2, 2)

One limitation to keep in mind is that if you have multiple nodes with the same name in your scene then whatever method you call will only affect the first instance of that node in your scene tree hierarchy. So it's best to give all your nodes unique names.


Note: When debugging your game in the editor, if you call a method without giving it the correct number of expected arguments, your game will crash. However, in an exported game, regardless of if it's in debug mode or not, the method call will simply be ignored if it's missing arguments or they're invalid."
__meta__ = {
"_edit_use_anchors_": false
}

[node name="About" type="Tabs" parent="DebugFrame/CommandHelp/TabContainer"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 4.0
margin_top = 32.0
margin_right = -4.0
margin_bottom = -4.0

[node name="Label" type="Label" parent="DebugFrame/CommandHelp/TabContainer/About"]
anchor_right = 1.0
anchor_bottom = 1.0
text = "This is a general-purpose debug console designed to be used in a wide variety of projects. It contains universally useful commands that work great for testing many things out mid-game."
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="DebugFrame"]
pause_mode = 2
wait_time = 0.05
one_shot = true
__meta__ = {
"_editor_description_": "Timer used to wait for screenshot."
}

[connection signal="cursor_changed" from="DebugFrame/Output" to="DebugFrame/Input" method="_on_Output_cursor_changed"]
[connection signal="text_entered" from="DebugFrame/Input" to="DebugFrame/Input" method="_on_Input_text_entered"]
[connection signal="timeout" from="DebugFrame/Timer" to="DebugFrame/Input" method="_on_Timer_timeout"]
